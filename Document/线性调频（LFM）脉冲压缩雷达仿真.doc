线性调频（LFM）脉冲压缩雷达仿真
一．	雷达工作原理
雷达是Radar（RAdio Detection And Ranging）的音译词，意为“无线电检测和测距”，即利用无线电波来检测目标并测定目标的位置，这也是雷达设备在最初阶段的功能。典型的雷达系统如图1.1，它主要由发射机，天线，接收机，数据处理，定时控制，显示等设备组成。利用雷达可以获知目标的有无，目标斜距，目标角位置，目标相对速度等。现代高分辨雷达扩展了原始雷达概念，使它具有对运动目标(飞机，导弹等)和区域目标(地面等)成像和识别的能力。雷达的应用越来越广泛。
 
                       图1.1：简单脉冲雷达系统框图
   雷达发射机的任务是产生符合要求的雷达波形（Radar Waveform），然后经馈线和收发开关由发射天线辐射出去，遇到目标后，电磁波一部分反射，经接收天线和收发开关由接收机接收，对雷达回波信号做适当的处理就可以获知目标的相关信息。
   假设理想点目标与雷达的相对距离为R，为了探测这个目标，雷达发射信号 ,电磁波以光速 向四周传播，经过时间 后电磁波到达目标，照射到目标上的电磁波可写成： 。电磁波与目标相互作用，一部分电磁波被目标散射，被反射的电磁波为 ，其中 为目标的雷达散射截面（Radar Cross Section ,简称RCS），反映目标对电磁波的散射能力。再经过时间 后，被雷达接收天线接收的信号为 。
如果将雷达天线和目标看作一个系统，便得到如图1.2的等效，而且这是一个LTI（线性时不变）系统。
                   
图1.2：雷达等效于LTI系统
等效LTI系统的冲击响应可写成:
                                                         (1.1)
M表示目标的个数， 是目标散射特性， 是光速在雷达与目标之间往返一次的时间，
                                        (1.2)
式中， 为第i个目标与雷达的相对距离。
雷达发射信号 经过该LTI系统，得输出信号(即雷达的回波信号) ：
                 (1.3)           
那么，怎样从雷达回波信号 提取出表征目标特性的 (表征相对距离)和 (表征目标反射特性)呢？常用的方法是让 通过雷达发射信号 的匹配滤波器，如图1.3。  
     
图1.3：雷达回波信号处理           
 的匹配滤波器 为：
                                                               (1.4)
于是，                                   （1.5）
对上式进行傅立叶变换：
                                                (1.6)
如果选取合适的 ，使它的幅频特性 为常数，那么1.6式可写为：
                                                           (1.7)
其傅立叶反变换为：                               (1.8)
 中包含目标的特征信息 和 。从  中可以得到目标的个数M和每个目标相对雷达的距离：                                                       （1.9）

这也是线性调频（LFM）脉冲压缩雷达的工作原理。
二．	线性调频（LFM）信号
脉冲压缩雷达能同时提高雷达的作用距离和距离分辨率。这种体制采用宽脉冲发射以提高发射的平均功率，保证足够大的作用距离；而接受时采用相应的脉冲压缩算法获得窄脉冲，以提高距离分辨率，较好的解决雷达作用距离与距离分辨率之间的矛盾。
脉冲压缩雷达最常见的调制信号是线性调频（Linear Frequency Modulation）信号,接收时采用匹配滤波器（Matched Filter）压缩脉冲。
LFM信号(也称Chirp 信号)的数学表达式为：
                              (2.1)
式中 为载波频率， 为矩形信号，
                               （2.2）                                            
 ，是调频斜率，于是，信号的瞬时频率为 ，如图2.1      
      图2.1 典型的chirp信号（a）up-chirp(K>0)（b）down-chirp(K<0)
将2.1式中的up-chirp信号重写为：
                                                   （2.3）
式中，
                                               （2.4）
是信号s(t)的复包络。由傅立叶变换性质，S(t)与s(t)具有相同的幅频特性，只是中心频率不同而以，因此，Matlab仿真时，只需考虑S(t)。以下Matlab程序产生2.4式的chirp信号，并作出其时域波形和幅频特性，如图2.2。

%%demo of chirp signal
T=10e-6;                          %pulse duration10us
B=30e6;                           %chirp frequency modulation bandwidth 30MHz
K=B/T;                            %chirp slope
Fs=2*B;Ts=1/Fs;                   %sampling frequency and sample spacing
N=T/Ts;
t=linspace(-T/2,T/2,N);
St=exp(j*pi*K*t.^2);                 %generate chirp signal
subplot(211)
plot(t*1e6,real(St));
xlabel('Time in u sec');
title('Real part of chirp signal');
grid on;axis tight;
subplot(212)
freq=linspace(-Fs/2,Fs/2,N);
plot(freq*1e-6,fftshift(abs(fft(St))));
xlabel('Frequency in MHz');
title('Magnitude spectrum of chirp signal');
grid on;axis tight;

仿真结果显示：
 
                   图2.2：LFM信号的时域波形和幅频特性



三．	LFM脉冲的匹配滤波
信号 的匹配滤波器的时域脉冲响应为：
                                                        （3.1）
 是使滤波器物理可实现所附加的时延。理论分析时，可令 ＝0，重写3.1式，
                                        （3.2）
将2.1式代入3.2式得:
                                                 (3.3 )
                  
图3.1：LFM信号的匹配滤波
如图3.1, 经过系统 得输出信号 ，
                  
当 时,
                                           (3.4)
当 时,
                                           (3.5)
合并3.4和3.5两式：
                                    （3.6）
3.6式即为LFM脉冲信号经匹配滤波器得输出,它是一固定载频 的信号。当 时，包络近似为辛克（sinc）函数。
                            （3.7）
 
图3.2：匹配滤波的输出信号
如图3.2，当 时， 为其第一零点坐标；当 时， ，习惯上，将此时的脉冲宽度定义为压缩脉冲宽度。
                                                             (3.8)
LFM信号的压缩前脉冲宽度T和压缩后的脉冲宽度 之比通常称为压缩比D，
                                                               （3.9）
3.9式表明，压缩比也就是LFM信号的时宽频宽积（时宽带宽积）。
由2.1,3.3,3.6式，s(t),h(t),so(t)均为复信号形式，Matab仿真时，只需考虑它们的复包络
S(t),H(t),So(t)。以下Matlab程序段仿真了图3.1所示的过程，并将仿真结果和理论进行对照。
%%demo of chirp signal after matched filter
T=10e-6;                            %pulse duration10us
B=30e6;                             %chirp frequency modulation bandwidth 30MHz
K=B/T;                              %chirp slope
Fs=10*B;Ts=1/Fs;                    %sampling frequency and sample spacing
N=T/Ts;
t=linspace(-T/2,T/2,N);
St=exp(j*pi*K*t.^2);                   %chirp signal
Ht=exp(-j*pi*K*t.^2);                  %matched filter
Sot=conv(St,Ht);                      %chirp signal after matched filter
subplot(211)
L=2*N-1;
t1=linspace(-T,T,L);
Z=abs(Sot);Z=Z/max(Z);                %normalize 
Z=20*log10(Z+1e-6);
Z1=abs(sinc(B.*t1));                   %sinc function
Z1=20*log10(Z1+1e-6);
t1=t1*B;                                         
plot(t1,Z,t1,Z1,'r.');
axis([-15,15,-50,inf]);grid on;
legend('emulational','sinc');
xlabel('Time in sec \times\itB');
ylabel('Amplitude,dB');
title('Chirp signal after matched filter');
subplot(212)                          %zoom
N0=3*Fs/B;
t2=-N0*Ts:Ts:N0*Ts;
t2=B*t2;
plot(t2,Z(N-N0:N+N0),t2,Z1(N-N0:N+N0),'r.');
axis([-inf,inf,-50,inf]);grid on;
set(gca,'Ytick',[-13.4,-4,0],'Xtick',[-3,-2,-1,-0.5,0,0.5,1,2,3]);
xlabel('Time in sec \times\itB');
ylabel('Amplitude,dB');
title('Chirp signal after matched filter (Zoom)');
仿真结果如图3.3：
 
 图3.3：Chirp信号的匹配滤波
图3.3中，时间轴进行了归一化，（ ）。图中反映出理论与仿真结果吻合良好。第一零点出现在 （即 ）处，此时相对幅度-13.4dB。压缩后的脉冲宽度近似为 （ ），此时相对幅度-4dB,这理论分析（图3.2）一致。

上面只是对各个信号复包络的仿真，实际雷达系统中，LFM脉冲的处理过程如图3.4。
                 
                       图3.4： LFM信号的接收处理过程
雷达回波信号 （1.4式）经过正交解调后，得到基带信号，再经过匹配滤波脉冲压缩后就可以作出判决。正交解调原理如图3.5，雷达回波信号经正交解调后得两路相互正交的信号I(t)和Q(t)。一种数字方法处理的的匹配滤波原理如图3.6。
 
图3.5：正交解调原理
 
图3.6：一种脉冲压缩雷达的数字处理方式
四：Matlab仿真结果
（1）任务：对以下雷达系统仿真。
雷达发射信号参数：
幅度：1.0
信号波形：线性调频信号
频带宽度：30兆赫兹（30MHz）
脉冲宽度：10微妙（20us）
中心频率：1GHz（109Hz）
雷达接收方式：
正交解调接收
距离门：10Km~15Km
目标：
Tar1：10.5Km
Tar2：11Km
Tar3：12Km
Tar4：12Km＋5m
Tar5：13Km
Tar6：13Km＋2m
（2）系统模型：
结合以上分析，用Matlab仿真雷达发射信号，回波信号，和压缩后的信号的复包络特性，其载频不予考虑（实际中需加调制和正交解调环节），仿真信号与系统模型如图4.1。
 
                   图4.1：雷达仿真等效信号与系统模型
（3）线性调频脉冲压缩雷达仿真程序LFM_radar
  仿真程序模拟产生理想点目标的回波，并采用频域相关方法（以便利用FFT）实现脉冲压缩。函数LFM_radar的参数意义如下：
T：chirp信号的持续脉宽；
B：chirp信号的调频带宽；
Rmin：观测目标距雷达的最近位置；
Rmax：观测目标距雷达的最远位置；
R：一维数组，数组值表示每个目标相对雷达的斜距；
RCS：一维数组，数组值表示每个目标的雷达散射截面。
在Matlab指令窗中键入：
LFM_radar(10e-6,30e6,10000,15000,[10500,11000,12000,12005,13000,13002],[1,1,1,1,1,1])
得到的仿真结果如图4.2。
（4）分辨率(Resolution)仿真
   改变两目标的相对位置，可以分析线性调频脉冲压缩雷达的分辨率。仿真程序默认参数的距离分辨率为：
                                (4.1)
图4.3为分辨率仿真结果，可做如下解释：
(a)	图为单点目标压缩候的波形；
(b)	图中，两目标相距2m，小于 ，因而不能分辨；
(c)	图中，两目标相距5m，等于 ，实际上是两目标的输出sinc包络叠加，可以看到他们的副瓣相互抵消；
(d)	－(h)图中，两目标距离大于雷达的距离分辨率，可以观察出，它们的主瓣变宽，直至能分辨出两目标。








 
                             图4.2：仿真结果

 图4.3：线性调频脉冲压缩雷达分辨率仿真









附录：LFM_radar.m
%%demo of LFM pulse radar
%=========================================================
function LFM_radar(T,B,Rmin,Rmax,R,RCS)
if nargin==0
    T=10e-6;                           %pulse duration 10us
    B=30e6;                            %chirp frequency modulation bandwidth 30MHz
    Rmin=10000;Rmax=15000;            %range bin
    R=[10500,11000,12000,12008,13000,13002]; %position of ideal point targets
    RCS=[1 1 1 1 1 1];                   %radar cross section
end
%=========================================================
%%Parameter
C=3e8;                                 %propagation speed
K=B/T;                                 %chirp slope
Rwid=Rmax-Rmin;                        %receive window in meter
Twid=2*Rwid/C;                          %receive window in second
Fs=5*B;Ts=1/Fs;                         %sampling frequency and sampling spacing
Nwid=ceil(Twid/Ts);                       %receive window in number
%==================================================================
%%Gnerate the echo      
t=linspace(2*Rmin/C,2*Rmax/C,Nwid);       %receive window
                                       %open window when t=2*Rmin/C
                                       %close window when t=2*Rmax/C                            
M=length(R);                            %number of targets                                        
td=ones(M,1)*t-2*R'/C*ones(1,Nwid);
Srt=RCS*(exp(j*pi*K*td.^2).*(abs(td)<T/2));%radar echo from point targets  
%=========================================================
%%Digtal processing of pulse compression radar using FFT and IFFT
Nchirp=ceil(T/Ts);                          %pulse duration in number
Nfft=2^nextpow2(Nwid+Nwid-1)；             %number needed to compute linear 
                                         %convolution using FFT algorithm
Srw=fft(Srt,Nfft);                           %fft of radar echo
t0=linspace(-T/2,T/2,Nchirp); 
St=exp(j*pi*K*t0.^2);                       %chirp signal                
Sw=fft(St,Nfft);                             %fft of chirp signal
Sot=fftshift(ifft(Srw.*conj(Sw)));              %signal after pulse compression
%=========================================================
N0=Nfft/2-Nchirp/2;
Z=abs(Sot(N0:N0+Nwid-1));
Z=Z/max(Z);
Z=20*log10(Z+1e-6);
%figure
subplot(211)
plot(t*1e6,real(Srt));axis tight;
xlabel('Time in u sec');ylabel('Amplitude')
title('Radar echo without compression');
subplot(212)
plot(t*C/2,Z)
axis([10000,15000,-60,0]);
xlabel('Range in meters');ylabel('Amplitude in dB')
title('Radar echo after compression');
%=========================================================
